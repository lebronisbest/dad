openapi: 3.1.0
info:
  title: TT Report API
  version: 1.0.0
  description: |
    TT 프로젝트의 통합 안전보고서 생성 API
    모든 레거시 엔드포인트는 제거되고 /v1/*로 표준화되었습니다.
  
  contact:
    name: TT Engineering Team
    email: engineering@tt-project.com
  
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3001
    description: 로컬 개발 환경
  - url: https://api.tt-project.com
    description: 프로덕션 환경

paths:
  /healthz:
    get:
      summary: 헬스체크
      description: 서비스 상태 및 의존성 확인
      tags: [Health]
      responses:
        '200':
          description: 서비스 정상
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  timestamp:
                    type: string
                    format: date-time
                  requestId:
                    type: string
                  services:
                    type: object
                    properties:
                      chrome:
                        type: boolean
                      validation:
                        type: boolean
                      rendering:
                        type: boolean
                      projectManagement:
                        type: boolean
                      performanceMonitoring:
                        type: boolean
                      errorRateMonitoring:
                        type: boolean
                      userDiagnostics:
                        type: boolean

  /v1/samples/dto:
    get:
      summary: 샘플 DTO 조회
      description: 보고서 생성을 위한 샘플 데이터 구조 조회
      tags: [Reports]
      responses:
        '200':
          description: 샘플 DTO 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleResponse'

  /v1/reports:
    post:
      summary: 보고서 생성
      description: |
        안전보고서를 생성합니다.
        output 쿼리 파라미터로 HTML 또는 PDF 형식을 지정할 수 있습니다.
      tags: [Reports]
      parameters:
        - name: output
          in: query
          description: 출력 형식
          required: false
          schema:
            type: string
            enum: [html, pdf]
            default: pdf
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportDTO'
      responses:
        '200':
          description: 보고서 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResponse'
            text/html:
              schema:
                type: string
                description: HTML 형식의 보고서 (output=html인 경우)
        '400':
          description: 유효성 검증 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 서버 내부 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/reports/validate:
    post:
      summary: 보고서 데이터 검증
      description: 보고서 데이터의 유효성을 검증합니다
      tags: [Reports]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportDTO'
      responses:
        '200':
          description: 검증 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
        '400':
          description: 검증 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/projects:
    get:
      summary: 프로젝트 목록 조회
      description: 모든 프로젝트 목록을 조회합니다
      tags: [Projects]
      responses:
        '200':
          description: 프로젝트 목록 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsResponse'
    
    post:
      summary: 프로젝트 생성
      description: 새로운 프로젝트를 생성합니다
      tags: [Projects]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectDTO'
      responses:
        '201':
          description: 프로젝트 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'

  /v1/projects/{projectId}:
    get:
      summary: 프로젝트 상세 조회
      description: 특정 프로젝트의 상세 정보를 조회합니다
      tags: [Projects]
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 프로젝트 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        '404':
          description: 프로젝트를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/projects/{projectId}/reports:
    get:
      summary: 프로젝트 보고서 목록
      description: 특정 프로젝트의 모든 보고서를 조회합니다
      tags: [Projects]
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 프로젝트 보고서 목록 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectReportsResponse'

  /v1/performance:
    get:
      summary: 성능 모니터링
      description: 시스템 성능 및 렌더링 상태를 조회합니다
      tags: [Monitoring]
      responses:
        '200':
          description: 성능 데이터 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceResponse'

  /v1/diagnostics:
    get:
      summary: 사용자 진단 로그
      description: 사용자별 진단 로그를 조회합니다
      tags: [Monitoring]
      responses:
        '200':
          description: 진단 로그 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticsResponse'

  /metrics:
    get:
      summary: 시스템 메트릭스
      description: 시스템 전반의 메트릭스 정보를 조회합니다
      tags: [Monitoring]
      responses:
        '200':
          description: 메트릭스 데이터 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'

components:
  schemas:
    ReportDTO:
      type: object
      required:
        - projectName
        - siteAddress
        - orgName
        - inspector
        - round
        - totalRounds
      properties:
        projectName:
          type: string
          description: 프로젝트명
          example: "서울시청 신축공사"
        siteAddress:
          type: string
          description: 현장 주소
          example: "서울특별시 중구 세종대로 110"
        orgName:
          type: string
          description: 시공사명
          example: "한국건설기술(주)"
        inspector:
          type: string
          description: 점검자명
          example: "김안전"
        round:
          type: integer
          description: 점검 회차
          minimum: 1
          example: 1
        totalRounds:
          type: integer
          description: 총 점검 회차
          minimum: 1
          example: 4
        visit:
          type: object
          properties:
            date:
              type: string
              format: date
              description: 점검일
            weather:
              type: string
              description: 날씨
            temperature:
              type: number
              description: 기온
        site:
          type: object
          properties:
            name:
              type: string
              description: 현장명
            address:
              type: string
              description: 현장 주소
            manager:
              type: string
              description: 현장관리자
        org:
          type: object
          properties:
            name:
              type: string
              description: 시공사명
            address:
              type: string
              description: 시공사 주소
            phone:
              type: string
              description: 연락처

    ProjectDTO:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: 프로젝트명
          example: "서울시청 신축공사"
        description:
          type: string
          description: 프로젝트 설명
        location:
          type: string
          description: 프로젝트 위치
        client:
          type: string
          description: 클라이언트명
        startDate:
          type: string
          format: date
          description: 시작일
        endDate:
          type: string
          format: date
          description: 종료일
        status:
          type: string
          enum: [active, completed, suspended]
          default: active
          description: 프로젝트 상태

    ReportResponse:
      type: object
      properties:
        ok:
          type: boolean
          example: true
        data:
          type: object
          properties:
            filename:
              type: string
              description: 생성된 파일명
            download_url:
              type: string
              description: 다운로드 URL
            message:
              type: string
              description: 성공 메시지
        requestId:
          type: string
          description: 요청 ID

    ValidationResponse:
      type: object
      properties:
        ok:
          type: boolean
          example: true
        data:
          type: object
          properties:
            isValid:
              type: boolean
              description: 유효성 검증 결과
            errors:
              type: array
              items:
                type: object
                properties:
                  field:
                    type: string
                    description: 오류가 발생한 필드
                  message:
                    type: string
                    description: 오류 메시지
        requestId:
          type: string

    ProjectResponse:
      type: object
      properties:
        ok:
          type: boolean
          example: true
        data:
          oneOf:
            - $ref: '#/components/schemas/ProjectDTO'
            - type: array
              items:
                $ref: '#/components/schemas/ProjectDTO'
        requestId:
          type: string

    ProjectsResponse:
      type: object
      properties:
        ok:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProjectDTO'
        requestId:
          type: string

    ProjectReportsResponse:
      type: object
      properties:
        ok:
          type: boolean
          example: true
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: 보고서 ID
              fileName:
                type: string
                description: 파일명
              created_at:
                type: string
                format: date-time
                description: 생성일시
              round:
                type: integer
                description: 점검 회차
        requestId:
          type: string

    SampleResponse:
      type: object
      properties:
        ok:
          type: boolean
          example: true
        data:
          $ref: '#/components/schemas/ReportDTO'
        requestId:
          type: string

    PerformanceResponse:
      type: object
      properties:
        ok:
          type: boolean
          example: true
        data:
          type: object
          properties:
            performance:
              type: object
              description: 성능 통계
            renderStatus:
              type: object
              description: 렌더링 상태
            targets:
              type: object
              properties:
                pdf10Pages:
                  type: string
                  description: 10페이지 PDF 목표 시간
                warningThreshold:
                  type: string
                  description: 경고 임계값
                criticalThreshold:
                  type: string
                  description: 임계 임계값
        requestId:
          type: string

    DiagnosticsResponse:
      type: object
      properties:
        ok:
          type: boolean
          example: true
        data:
          type: object
          description: 진단 로그 데이터
        requestId:
          type: string

    MetricsResponse:
      type: object
      properties:
        metrics:
          type: object
          description: 메트릭스 데이터
        health:
          type: object
          description: 헬스 상태
        timestamp:
          type: string
          format: date-time
        requestId:
          type: string

    ErrorResponse:
      type: object
      properties:
        ok:
          type: boolean
          example: false
        error:
          type: string
          description: 오류 메시지
        code:
          type: string
          description: 오류 코드
        details:
          type: object
          description: 상세 오류 정보
        requestId:
          type: string
          description: 요청 ID

tags:
  - name: Reports
    description: 보고서 생성 및 관리
  - name: Projects
    description: 프로젝트 관리
  - name: Monitoring
    description: 시스템 모니터링
  - name: Health
    description: 서비스 상태 확인

security:
  - ApiKeyAuth: []

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API 키 (필요시)
